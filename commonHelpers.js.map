{"version":3,"file":"commonHelpers.js","sources":["../src/sctipt.js"],"sourcesContent":["// ****************************Практика************************* \\\\\n// Наше завдання написати програмне забезпечення для ігрового автомата\n// Для вирішення завдання використай готову розмітку HTML та базову стилізацію\n// Після натиснення на кнопку \"Start game\" в кожному віконці по черзі має з'являтись смайлик з затримкою в 1 секунду ('🤑' або '👿')\n// Під час обробки кожного віконця створи масив з Promis-ами в якому кожен з них буде відповідати за своє віконце, після чого оброби даний масив за допомогою методу Promise.allSettled\n// Після того як всі віконця були заповнені потрібно щоб скріпт автоматично визначав чи гравець переміг, чи ні. Якщо в кожному віконці однаковий смайлик це означає що користувач переміг\n// Виводить модальне вікно з повідомленням про статус гри ('Winner' або 'Loser')\n// Для модального вікна використовуй бібліотеку basicLightbox\n// Після повторного натискання на кнопку \"Start game\" поле має очищатись, а гра починатись з початку.\nimport * as basicLightbox from 'basiclightbox';\nconst elements = {\n  btnStart: document.querySelector('.js-start'),\n  enterItem: document.querySelector('.js-container'),\n};\n\nelements.btnStart.addEventListener('click', handlerResultGame);\n\nfunction handlerResultGame() {\n  const promise = [...elements.enterItem.children].map(createPromise);\n  Promise.allSettled(promise).then(items => {\n    items.forEach((item, idx) => {\n      elements.enterItem.children[idx].textContent = '';\n      setTimeout(() => {\n        elements.enterItem.children[idx].textContent =\n          item.value || item.reason;\n        if (items.length - 1 === idx) {\n          const instance = basicLightbox.create(`\n\t<h1>${isWinner ? 'Winner' : 'Loser'}</h1>\n`);\n          instance.show();\n        }\n      }, (idx + 1) * 1000);\n    });\n    const isWinner =\n      items.every(({ status }) => status === 'fulfilled') ||\n      items.every(({ status }) => status === 'rejected');\n  });\n}\n\nfunction createPromise() {\n  return new Promise((res, rej) => {\n    const random = Math.random();\n    if (random > 0.5) {\n      res('🤑');\n    } else {\n      rej('👿');\n    }\n  });\n}\n"],"names":["elements","handlerResultGame","promise","createPromise","items","item","idx","basicLightbox.create","isWinner","status","res","rej"],"mappings":"svBAUA,MAAMA,EAAW,CACf,SAAU,SAAS,cAAc,WAAW,EAC5C,UAAW,SAAS,cAAc,eAAe,CACnD,EAEAA,EAAS,SAAS,iBAAiB,QAASC,CAAiB,EAE7D,SAASA,GAAoB,CAC3B,MAAMC,EAAU,CAAC,GAAGF,EAAS,UAAU,QAAQ,EAAE,IAAIG,CAAa,EAClE,QAAQ,WAAWD,CAAO,EAAE,KAAKE,GAAS,CACxCA,EAAM,QAAQ,CAACC,EAAMC,IAAQ,CAC3BN,EAAS,UAAU,SAASM,GAAK,YAAc,GAC/C,WAAW,IAAM,CACfN,EAAS,UAAU,SAASM,GAAK,YAC/BD,EAAK,OAASA,EAAK,OACjBD,EAAM,OAAS,IAAME,GACNC,EAAAA,OAAqB;AAAA,OACzCC,EAAW,SAAW;AAAA,CAC5B,EACkB,KAAI,CAEhB,GAAGF,EAAM,GAAK,GAAI,CACzB,CAAK,EACD,MAAME,EACJJ,EAAM,MAAM,CAAC,CAAE,OAAAK,CAAM,IAAOA,IAAW,WAAW,GAClDL,EAAM,MAAM,CAAC,CAAE,OAAAK,CAAM,IAAOA,IAAW,UAAU,CACvD,CAAG,CACH,CAEA,SAASN,GAAgB,CACvB,OAAO,IAAI,QAAQ,CAACO,EAAKC,IAAQ,CAChB,KAAK,SACP,GACXD,EAAI,IAAI,EAERC,EAAI,IAAI,CAEd,CAAG,CACH"}